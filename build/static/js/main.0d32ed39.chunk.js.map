{"version":3,"sources":["components/Summary/styles.ts","Assets/up.svg","Assets/down.svg","Assets/total.svg","context/TransactionsContext.tsx","services/api.ts","hooks/useTransactions.tsx","utils/formatAmount.ts","utils/formatDeposit.ts","utils/formatWithdraw.ts","utils/formatTotal.ts","components/Summary/index.tsx","components/TransactionsTable/styled.ts","components/TransactionsTable/index.tsx","utils/formatDate.ts","components/Dashboard/styles.ts","components/Dashboard/index.tsx","Assets/logo.svg","components/Header/styles.ts","components/Header/index.tsx","styles/global.ts","Assets/close.svg","components/NewTransactionModal/styles.ts","components/NewTransactionModal/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","TransactionsContext","createContext","Provider","TransactionsProvider","children","useState","transactions","setTransactions","value","api","axios","create","baseURL","useTransactions","useContext","isNewTransactionModalOpen","setIsNewTransactionModalOpen","fetchTransactions","a","get","data","post","response","fetchCreateNewTransaction","handelOpenNewTransactionModal","handelCloseNewTransactionModal","formatAmount","amount","Intl","NumberFormat","style","currency","format","formatDeposit","filter","item","type","reduce","accumulator","formatWithdraw","formatTotal","Summary","src","incomeImg","alt","outcomeImg","className","totalImg","TransactionsTable","useEffect","map","date","title","createdAt","category","id","DateTimeFormat","Date","section","DashBoard","header","Content","Header","onOpenNewTransactionModal","logo","onClick","GlobalStyle","createGlobalStyle","form","TransactionTypeContainer","colors","green","red","RadioBox","button","props","isActive","activeColor","darken","NewTransactionModal","isOpen","onRequestClose","setType","setTitle","setCategory","setValue","e","preventDefault","newDate","toString","overlayClassName","close","onSubmit","placeholder","onChange","target","Number","App","Modal","setAppElement","createServer","models","transaction","Model","seeds","server","db","loadData","routes","this","namespace","schema","all","request","JSON","parse","requestBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d32ed39.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2rem;\n  margin-top: -10rem;\n\n  div {\n    background: var(--shape);\n    padding: 1.5rem 2rem;\n    border-radius: 0.25rem;\n    color: var(--text-title);\n\n    header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    strong {\n      display: block;\n      margin-top: 1rem;\n      font-size: 2rem;\n      font-weight: 500;\n      line-height: 3rem;\n    }\n    &.highlight {\n      background: var(--green);\n      color: var(--shape);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/up.d58effe2.svg\";","export default __webpack_public_path__ + \"static/media/down.6eb96d30.svg\";","export default __webpack_public_path__ + \"static/media/total.efc003fe.svg\";","import { createContext, useState } from \"react\";\nimport { ITransaction, ITransactionProvider } from \"./interfaces\";\n\nexport const TransactionsContext = createContext<ITransactionProvider>(\n  {} as ITransactionProvider\n);\n\nconst { Provider } = TransactionsContext;\n\nexport default function TransactionsProvider({ children }: any) {\n  const [transactions, setTransactions] = useState<ITransaction[]>([]);\n\n  return (\n    <Provider\n      value={{\n        transactions,\n        setTransactions,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n}\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: \"http://localhost:3000/api/\",\n});\n","import { useContext, useState } from \"react\";\nimport { TransactionsContext } from \"../context/TransactionsContext\";\nimport { api } from \"../services/api\";\nimport { ITransactionAdd } from \"./interfaces\";\n\nexport function useTransactions() {\n  const { transactions, setTransactions } = useContext(TransactionsContext);\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] =\n    useState(false);\n  function handelOpenNewTransactionModal(): void {\n    setIsNewTransactionModalOpen(true);\n  }\n  function handelCloseNewTransactionModal(): void {\n    setIsNewTransactionModalOpen(false);\n  }\n  async function fetchTransactions(): Promise<void> {\n    const { data } = await api.get(\"/transactions\");\n\n    const { transactions } = await data;\n\n    setTransactions(transactions);\n  }\n\n  async function fetchCreateNewTransaction(\n    data: ITransactionAdd\n  ): Promise<any> {\n    const response = await api.post(\"/transactions\", data);\n\n    if (response) {\n      fetchTransactions();\n    }\n\n    return response;\n  }\n  return {\n    transactions,\n    fetchTransactions,\n    fetchCreateNewTransaction,\n    handelOpenNewTransactionModal,\n    handelCloseNewTransactionModal,\n    isNewTransactionModalOpen,\n    setIsNewTransactionModalOpen,\n  };\n}\n","export function formatAmount(amount: number) {\n  return new Intl.NumberFormat(\"pt-BR\", {\n    style: \"currency\",\n    currency: \"BRL\",\n  }).format(amount);\n}\n","import { formatAmount } from \"./formatAmount\";\nimport { ITransaction } from \"./interfaces\";\n\nexport function formatDeposit(transactions: ITransaction[]) {\n  return formatAmount(\n    transactions\n      .filter((item) => item.type === \"deposit\")\n      .reduce((accumulator, item) => {\n        return accumulator + item.amount;\n      }, 0)\n  );\n}\n","import { formatAmount } from \"./formatAmount\";\nimport { ITransaction } from \"./interfaces\";\n\nexport function formatWithdraw(transactions: ITransaction[]) {\n  return formatAmount(\n    transactions\n      .filter((item) => item.type === \"withdraw\")\n      .reduce((accumulator, item) => {\n        return accumulator + item.amount;\n      }, 0)\n  );\n}\n","import { formatAmount } from \"./formatAmount\";\nimport { ITransaction } from \"./interfaces\";\n\nexport function formatTotal(transactions: ITransaction[]) {\n  return formatAmount(\n    transactions.reduce((accumulator, item) => {\n      return accumulator + item.amount;\n    }, 0)\n  );\n}\n","import { Container } from \"./styles\";\nimport incomeImg from \"../../Assets/up.svg\";\nimport outcomeImg from \"../../Assets/down.svg\";\nimport totalImg from \"../../Assets/total.svg\";\nimport { useTransactions } from \"../../hooks/useTransactions\";\nimport { formatDeposit } from \"../../utils/formatDeposit\";\nimport { formatWithdraw } from \"../../utils/formatWithdraw\";\nimport { formatTotal } from \"../../utils/formatTotal\";\nexport function Summary() {\n  const { transactions } = useTransactions();\n  return (\n    <Container>\n      <div>\n        <header>\n          <p>Entradas</p>\n          <img src={incomeImg} alt=\"Entradas\" />\n        </header>\n        <strong>{formatDeposit(transactions)}</strong>\n      </div>\n      <div>\n        <header>\n          <p>Saídas</p>\n          <img src={outcomeImg} alt=\"Saídas\" />\n        </header>\n        <strong>- {formatWithdraw(transactions)}</strong>\n      </div>\n      <div className=\"highlight\">\n        <header>\n          <p>Total</p>\n          <img src={totalImg} alt=\"Total\" />\n        </header>\n        <strong> {formatTotal(transactions)}</strong>\n      </div>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 4rem;\n  table {\n    width: 100%;\n    border-spacing: 0 0.5rem;\n\n    th {\n      color: var(--text-body);\n      font-weight: 400;\n      padding: 1rem 2rem;\n      text-align: left;\n      line-height: 1.5rem;\n    }\n    td {\n      padding: 1rem 2rem;\n      border: 0;\n      background: var(--shape);\n      color: var(--text-body);\n      border-radius: 0.25rem;\n\n      &:first-child {\n        color: var(--text-title);\n      }\n      &.deposit {\n        color: var(--green);\n      }\n      &.withdraw {\n        color: var(--red);\n      }\n    }\n  }\n`;\n","import { useEffect } from \"react\";\nimport { useTransactions } from \"../../hooks/useTransactions\";\nimport { formatAmount } from \"../../utils/formatAmount\";\nimport { formatDate } from \"../../utils/formatDate\";\nimport { Container } from \"./styled\";\n\nexport function TransactionsTable() {\n  const { transactions, fetchTransactions } = useTransactions();\n\n  useEffect(() => {\n    fetchTransactions();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Container>\n      <table>\n        <thead>\n          <tr>\n            <th>Titulo</th>\n            <th>Valor</th>\n            <th>Categoria</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions &&\n            transactions.map(\n              ({ title, amount, type, createdAt, category, id }) => (\n                <tr key={id}>\n                  <td>{title}</td>\n                  <td className={type}>{formatAmount(amount)}</td>\n                  <td>{category}</td>\n                  <td>{formatDate(createdAt)}</td>\n                </tr>\n              )\n            )}\n        </tbody>\n      </table>\n    </Container>\n  );\n}\n","export function formatDate(date: string) {\n  return new Intl.DateTimeFormat(\"pt-BR\").format(new Date(date));\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 2.5rem 1rem;\n  height: calc(100vh - 24rem);\n`;\n","import { Summary } from \"../Summary\";\nimport { TransactionsTable } from \"../TransactionsTable\";\nimport { Container } from \"./styles\";\n\nexport function DashBoard() {\n  return (\n    <Container>\n      <Summary />\n      <TransactionsTable />\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.614d71d1.svg\";","import styled from \"styled-components\";\n\nexport const Container = styled.header`\n  background: var(--blue);\n`;\nexport const Content = styled.div`\n  background: var(--blue);\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 2rem 1rem 18rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    font-size: 1rem;\n    color: var(--shape);\n    background: var(--blue-light);\n    padding: 0 2rem;\n    border-radius: 0.25rem;\n    height: 3rem;\n    transition: filter 0.2s;\n\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n`;\n","import logo from \"../../Assets/logo.svg\";\nimport { Container, Content } from \"./styles\";\n//FIXME:\n\ninterface HeaderProps {\n  onOpenNewTransactionModal: () => void;\n}\nexport function Header({ onOpenNewTransactionModal }: HeaderProps) {\n  return (\n    <Container>\n      <Content>\n        <img src={logo} alt=\"dt money\" />\n        <button type=\"button\" onClick={onOpenNewTransactionModal}>\n          Nova Transação\n        </button>\n      </Content>\n    </Container>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n:root {\n  --background: #f0f2f5;\n  --blue-light: #6933FF;\n  --blue: #5429CC;\n  --red: #E52E4D;\n  --text-title: #363F5F;\n  --text-body:#969CB3;\n  --shape: #ffffff;\n  --green: #33CC95;\n}\n*{\n margin: 0;\n padding: 0;\n box-sizing: border-box;\n}\nhtml{\n  @media (max-width: 1080px ){\n    font-size: 93.75%;\n  }\n  @media (max-width: 720px ){\n    font-size: 87.5%;\n  }\n  @media (max-width: 720px ){\n    font-size: 75%;\n  }\n}\nbody{\n  background:var(--background) ;\n  -webkit-font-smoothing: antialiased;\n}\n\nbody,input, textarea, button{\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n}\nh1,h2,h3,h4,h5,h6, strong{\n  font-weight: 600;\n}\nbutton{\n  cursor: pointer;\n  border: none;\n}\n\n[disabled]{\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n*{\n  li{\n    text-decoration: none;\n  }\n\n  ul{\n    list-style: none;\n  }\n}\n\n.react-modal-overlay {\n  background: rgba(0,0,0,0.5);\n\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.react-modal-content {\n width: 100%;\n height:576px;\n max-width: 576px;\n background: var(--background);\n padding: 3rem;\n position: relative;\n border-radius: 0.25rem;\n}\n.react-modal-close{\n  position: absolute;\n  right: 0.5rem;\n  top: 0.5rem;\n  border: 0;\n  background: transparent;\n  transition: all.2s ease-in;\n  &:hover{\n    filter: brightness(0.6);\n  }\n}\n`;\n","export default __webpack_public_path__ + \"static/media/close.3e141cd0.svg\";","import styled from \"styled-components\";\nimport { darken } from \"polished\";\nexport const Container = styled.form`\n  h2 {\n    color: var(--text-title);\n    font-size: 1.5rem;\n    margin-bottom: 2rem;\n  }\n\n  input {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    border-radius: 0.25rem;\n\n    background: #e7e9ee;\n    border: 1px solid #d7d7d7d7;\n\n    font-weight: 400;\n    font-size: 1rem;\n\n    &::placeholder {\n      color: var(--text-body);\n    }\n\n    & + input {\n      margin-top: 1rem;\n    }\n  }\n\n  button[type=\"submit\"] {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    background: var(--green);\n    color: #fff;\n    border-radius: 0.25rem;\n    border: 0;\n    font-size: 1rem;\n    margin-top: 1.5rem;\n    transition: 0.2s ease-in;\n    font-weight: 600;\n    &:hover {\n      filter: brightness(0.6);\n    }\n  }\n`;\n\nexport const TransactionTypeContainer = styled.div`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1rem;\n`;\n\ninterface RadioBoxProps {\n  isActive: boolean;\n  activeColor: \"green\" | \"red\";\n}\n\nconst colors = {\n  green: \"#33CC9510\",\n  red: \"#E52E4d10\",\n};\nexport const RadioBox = styled.button<RadioBoxProps>`\n  height: 4rem;\n  border: 1px solid #d7d7d7;\n  border-radius: 0.25rem;\n\n  background: ${(props) => (props.isActive ? colors[props.activeColor] : \"\")};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.2s ease-in;\n  &:hover {\n    border-color: ${darken(0.1, \"#d7d7d7\")};\n  }\n  img {\n    width: 2.2rem;\n    height: 2.2rem;\n  }\n\n  span {\n    display: inline-block;\n    margin-left: 1rem;\n    font-size: 1rem;\n    color: var(--text-title);\n  }\n`;\n","import Modal from \"react-modal\";\nimport close from \"../../Assets/close.svg\";\nimport { Container, TransactionTypeContainer, RadioBox } from \"./styles\";\nimport incomeImg from \"../../Assets/up.svg\";\nimport outcomeImg from \"../../Assets/down.svg\";\nimport { FormEvent, useState } from \"react\";\nimport { useTransactions } from \"../../hooks/useTransactions\";\nimport { ITransactionAdd, NewTransactionModalProps } from \"./interfaces\";\n\nexport function NewTransactionModal({\n  isOpen,\n  onRequestClose,\n}: NewTransactionModalProps) {\n  const [type, setType] = useState<string>(\"deposit\");\n  const [title, setTitle] = useState<string>(\"\");\n  const [category, setCategory] = useState<string>(\"\");\n  const [value, setValue] = useState<Number>(0);\n  const { fetchCreateNewTransaction } = useTransactions();\n\n  async function handleCreateNewTransaction(e: FormEvent) {\n    e.preventDefault();\n    const newDate = new Date().toString();\n\n    const data: ITransactionAdd = {\n      title,\n      type,\n      category,\n      amount: value,\n      createdAt: newDate,\n    };\n\n    const response = await fetchCreateNewTransaction(data);\n\n    if (response) {\n      onRequestClose();\n      setCategory(\"\");\n      setTitle(\"\");\n      setValue(0);\n      setType(\"deposit\");\n    }\n  }\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      overlayClassName=\"react-modal-overlay\"\n      className=\"react-modal-content\"\n    >\n      <button type=\"button\">\n        <img\n          src={close}\n          alt=\"close in modal\"\n          className=\"react-modal-close\"\n          onClick={onRequestClose}\n        />\n      </button>\n      <Container onSubmit={handleCreateNewTransaction}>\n        <h2>Cadastrar Transação</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Titulo\"\n          value={title}\n          onChange={({ target }) => setTitle(target.value)}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Valor\"\n          value={Number(value)}\n          onChange={({ target }) => setValue(Number(target.value))}\n        />\n        <TransactionTypeContainer>\n          <RadioBox\n            onClick={() => {\n              setType(\"deposit\");\n            }}\n            type=\"button\"\n            isActive={type === \"deposit\"}\n            activeColor=\"green\"\n          >\n            <img src={incomeImg} alt=\"Entrada\" />\n            <span>Entrada</span>\n          </RadioBox>\n\n          <RadioBox\n            onClick={() => {\n              setType(\"withdraw\");\n            }}\n            type=\"button\"\n            isActive={type === \"withdraw\"}\n            activeColor=\"red\"\n          >\n            <img src={outcomeImg} alt=\"saída\" />\n            <span>Saída</span>\n          </RadioBox>\n        </TransactionTypeContainer>\n        <input\n          type=\"text\"\n          placeholder=\"Categoria\"\n          value={category}\n          onChange={({ target }) => setCategory(target.value)}\n        />\n        <button type=\"submit\">Cadastrar</button>\n      </Container>\n    </Modal>\n  );\n}\n","import { DashBoard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport Modal from \"react-modal\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport TransactionsProvider from \"./context/TransactionsContext\";\nimport { useTransactions } from \"./hooks/useTransactions\";\n\nModal.setAppElement(\"#root\");\nexport function App() {\n  const {\n    handelCloseNewTransactionModal,\n    isNewTransactionModalOpen,\n    handelOpenNewTransactionModal,\n  } = useTransactions();\n  return (\n    <TransactionsProvider>\n      <Header onOpenNewTransactionModal={handelOpenNewTransactionModal} />\n      <GlobalStyle />\n      <DashBoard />\n\n      <NewTransactionModal\n        isOpen={isNewTransactionModalOpen}\n        onRequestClose={handelCloseNewTransactionModal}\n      />\n    </TransactionsProvider>\n  );\n}\n","import { createServer, Model } from \"miragejs\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\ncreateServer({\n  models: {\n    transaction: Model,\n  },\n\n  seeds(server) {\n    server.db.loadData({\n      transactions: [\n        {\n          id: 1,\n          title: \"Desenvolvimento Web Front\",\n          type: \"deposit\",\n          category: \"Desenvolvimento\",\n          amount: 4000,\n          createdAt: new Date(\"2021-02-09 04:00:00\"),\n        },\n        {\n          id: 2,\n          title: \"Desenvolvimento Web Back\",\n          type: \"deposit\",\n          amount: 3000,\n          category: \"Desenvolvimento\",\n          createdAt: new Date(\"2021-02-09 03:00:00\"),\n        },\n      ],\n    });\n  },\n\n  routes() {\n    this.namespace = \"api\";\n    this.get(\"/transactions\", () => {\n      return this.schema.all(\"transaction\");\n    });\n    this.post(\"/transactions\", (schema, request) => {\n      const data = JSON.parse(request.requestBody);\n\n      return schema.create(\"transaction\", data);\n    });\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}